name: Publish release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version number to tag and release"
        required: true
        type: string
      prerelease:
        description: "Release as pre-release"
        required: false
        type: boolean
        default: false

jobs:
  release-npm:
    runs-on: ubuntu-latest
    environment: npm
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use supported Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: node-modules-${{ hashFiles('package.json') }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Authenticate with private NPM package
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.PYTHON_NODE_NPM_TOKEN }}" > ~/.npmrc
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Bump version and commit
        run: |
          pnpm version ${{ inputs.version }} --no-git-tag-version
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git commit -a -m "Bumped v${{ inputs.version }}"
      - run: npm install -g npm@latest
      - run: npm publish --tag ${{ inputs.prerelease == true && 'next' || 'latest' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Collect npm logs
        if: always()
        run: |
          mkdir -p npm-logs
          if [ -d "$HOME/.npm/_logs" ]; then
            cp -a "$HOME/.npm/_logs/." npm-logs/
          fi
      - name: Upload npm logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-logs
          path: npm-logs
          if-no-files-found: ignore
      - name: Push release commit if publish succeeded
        run: git push origin HEAD:${{ github.ref }}
      - name: Create release notes
        run: |
          npx @matteo.collina/release-notes -a ${{ secrets.GITHUB_TOKEN }} -t v${{ inputs.version }} -r ${{ github.repository }} ${{ github.event.inputs.prerelease == 'true' && '-p' || '' }} -c ${{ github.ref }}
